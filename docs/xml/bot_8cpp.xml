<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="bot_8cpp" kind="file" language="C++">
    <compoundname>bot.cpp</compoundname>
    <includes refid="bot_8h" local="yes">../include/bot.h</includes>
    <incdepgraph>
      <node id="59">
        <label>tf/transform_listener.h</label>
      </node>
      <node id="57">
        <label>tf/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="62">
        <label>image_transport/image_transport.h</label>
      </node>
      <node id="55">
        <label>nav_msgs/Odometry.h</label>
      </node>
      <node id="61">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="63">
        <label>cv_bridge/cv_bridge.h</label>
      </node>
      <node id="58">
        <label>tf/tf.h</label>
      </node>
      <node id="67">
        <label>fstream</label>
      </node>
      <node id="60">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>../include/bot.h</label>
        <link refid="bot_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>sensor_msgs/image_encodings.h</label>
      </node>
      <node id="56">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="65">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="51">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="53">
        <label>sensor.h</label>
        <link refid="sensor_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ros/ros.h</label>
      </node>
      <node id="52">
        <label>math.h</label>
      </node>
      <node id="66">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="54">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="48">
        <label>bot.cpp</label>
        <link refid="bot_8cpp"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para><ref refid="class_bot" kindref="compound">Bot</ref> class implementation;. </para>    </briefdescription>
    <detaileddescription>
<para>BSD 3-Clause License <simplesect kind="copyright"><para>(c) 2018, Krishna Bhatu, Siddhesh Rane All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</para></simplesect>
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para><simplesect kind="author"><para>Krishna Bhatu, Siddhesh Rane </para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
</para><sect1 id="sensor_8cpp_1DESCRIPTION">
<title>DESCRIPTION</title>
<para>C++ implementation for <ref refid="class_bot" kindref="compound">Bot</ref> class which controls motion of the robot </para></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#include<sp/>&quot;../include/bot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>default<sp/>Bot<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_bot_1a14b4bfcbda8c051d8447e73073567b50" refkind="member"><highlight class="normal"><ref refid="class_bot_1a14b4bfcbda8c051d8447e73073567b50" kindref="member">Bot::Bot</ref>(<ref refid="class_sensor" kindref="compound">Sensor</ref>*<sp/>iSensor,<sp/><ref refid="class_camera" kindref="compound">Camera</ref>*<sp/>iCamera)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sensor(iSensor),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>camera(iCamera),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnRight(false),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnLeft(false),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxSpeed(0.5)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publisher<sp/>to<sp/>publish<sp/>messages<sp/>on<sp/>/navi<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>pubVel<sp/>=<sp/>nh.advertise<sp/>&lt;<sp/>geometry_msgs::Twist</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;/cmd_vel_mux/input/navi&quot;</highlight><highlight class="normal">,<sp/>1000);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Default<sp/>ROBOT<sp/>Created!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1aeae87db5fd2d6a130587f665e39a6557" kindref="member">resetBot</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor<sp/>that<sp/>resets<sp/>the<sp/>velocity<sp/>of<sp/>the<sp/>bot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_bot_1a4163b0f6c91f94cbeb3145eeda8cd361" refkind="member"><highlight class="normal"><ref refid="class_bot_1a4163b0f6c91f94cbeb3145eeda8cd361" kindref="member">Bot::~Bot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1aeae87db5fd2d6a130587f665e39a6557" kindref="member">resetBot</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>bot<sp/>with<sp/>obstacle<sp/>avoidance<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_bot_1a5c1f98ef7f22894832865c5987d184c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1a5c1f98ef7f22894832865c5987d184c3" kindref="member">Bot::startMotion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>ros::Rate<sp/>loop_rate(5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>values<sp/>from<sp/>the<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Right:<sp/>%f,<sp/>left:<sp/>%f,<sp/>forward:<sp/>%f,<sp/>nowturn:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>(),<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>(),<sp/>camera-&gt;<ref refid="class_camera_1a6b27e3016f42ac8af96601426e009c1b" kindref="member">getNowTurn</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1af590a94a155718952a71ee842a0db661" kindref="member">getObstacleDetected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Wall<sp/>Detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.linear.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>itself<sp/>to<sp/>be<sp/>perpendicular<sp/>to<sp/>the<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isnanf(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!isnanf(sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>())<sp/>&amp;&amp;<sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>-<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>())<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>fabs(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>())<sp/>-<sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Adjusting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>&gt;<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()<sp/>&amp;&amp;<sp/>error<sp/>&gt;<sp/>0.05</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>error<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(error);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Adjusting<sp/>left&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>&lt;<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>error<sp/>&gt;<sp/>0.05<sp/>&amp;&amp;<sp/>error<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">turnRight</ref>(error);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Adjusting<sp/>right&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Adjustment<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;No<sp/>Adjustment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bot_1ab20d03ffaf12e27a1ee84714a3e83950" kindref="member">checkFreeDirection</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Path<sp/>is<sp/>clear!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>fabs(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>())<sp/>-<sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1.0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isnanf(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>())</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!isnanf(sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>0.05;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Error:<sp/>%f,<sp/>gain:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>error,<sp/>gain);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>&gt;<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>-gain<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>gain<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="class_camera_1a6b27e3016f42ac8af96601426e009c1b" kindref="member">getNowTurn</ref>()<sp/>==<sp/>10<sp/>&amp;&amp;<sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()<sp/>&gt;<sp/>3</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!nextTurnRight)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnRight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnLeft<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a66d6f05a42feb58468bc4039b07b1b23" kindref="member">setCountB</ref>(0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1ab51102514272832890346b414759e716" kindref="member">setSignDetected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="class_camera_1a6b27e3016f42ac8af96601426e009c1b" kindref="member">getNowTurn</ref>()<sp/>==<sp/>5<sp/>&amp;&amp;<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()<sp/>&gt;<sp/>3</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!nextTurnLeft)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnLeft<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnRight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a3186b8e7cf648308237a2ba440379e34" kindref="member">setCount</ref>(0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1ab51102514272832890346b414759e716" kindref="member">setSignDetected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="class_camera_1a6b27e3016f42ac8af96601426e009c1b" kindref="member">getNowTurn</ref>()<sp/>==<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bot_1a308e7e40f00a853d1397cfafcb7d2cd5" kindref="member">doorDetection</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextTurnRight)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>-0.48;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;Right<sp/>Turn<sp/>Initiate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnRight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a66d6f05a42feb58468bc4039b07b1b23" kindref="member">setCountB</ref>(0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextTurnLeft)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0.48;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;Left<sp/>Turn<sp/>Initiate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>())</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTurnLeft<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a3186b8e7cf648308237a2ba440379e34" kindref="member">setCount</ref>(0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1a77cd72118fd9d03e04beaf60f7345138" kindref="member">setNowTurn</ref>(0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.linear.x<sp/>=<sp/>maxSpeed;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>velocity<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>translational<sp/>and<sp/>rotational<sp/>properties<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_bot_1aeae87db5fd2d6a130587f665e39a6557" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1aeae87db5fd2d6a130587f665e39a6557" kindref="member">Bot::resetBot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>msg.linear.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>msg.linear.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>msg.linear.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>msg.angular.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>msg.angular.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>msg.angular.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>maximum<sp/>linear<sp/>speed<sp/>by<sp/>the<sp/>bot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_bot_1a4a3b192232d8b938f11c1d253795c222" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_bot_1a4a3b192232d8b938f11c1d253795c222" kindref="member">Bot::getMaxSpeed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxSpeed;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>turn<sp/>the<sp/>robot<sp/>in<sp/>right<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">Bot::turnRight</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desiredAngle)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Turning<sp/>in<sp/>right<sp/>direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>ros::Rate<sp/>loop_rate(10);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>desiredAngle<sp/>=<sp/>desiredAngle<sp/>-<sp/>sensor-&gt;<ref refid="class_sensor_1a1984ff9826d1c92d7e91add776a4107b" kindref="member">getCurrentYaw</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>fabs(fabs(sensor-&gt;<ref refid="class_sensor_1a1984ff9826d1c92d7e91add776a4107b" kindref="member">getCurrentYaw</ref>())<sp/>-<sp/>fabs(desiredAngle))<sp/>*<sp/>1.0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>-1.5<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&lt;=<sp/>0.01<sp/>&amp;&amp;<sp/>error<sp/>&gt;=<sp/>-0.99)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;break&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>turn<sp/>the<sp/>robot<sp/>in<sp/>left<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">Bot::turnLeft</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desiredAngle)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Turning<sp/>in<sp/>left<sp/>direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>ros::Rate<sp/>loop_rate(10);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>desiredAngle<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a1984ff9826d1c92d7e91add776a4107b" kindref="member">getCurrentYaw</ref>()<sp/>+<sp/>desiredAngle;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok())<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>fabs(fabs(desiredAngle)<sp/>-<sp/>fabs(sensor-&gt;<ref refid="class_sensor_1a1984ff9826d1c92d7e91add776a4107b" kindref="member">getCurrentYaw</ref>()))<sp/>*<sp/>1.0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>1.5<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&lt;=<sp/>0.01<sp/>&amp;&amp;<sp/>error<sp/>&gt;=<sp/>-0.99)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;break&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>move<sp/>forward<sp/>by<sp/>certain<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_bot_1abc25556b72a44e45056d161eaa48e1c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1abc25556b72a44e45056d161eaa48e1c6" kindref="member">Bot::moveForward</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desiredPos)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>ros::Time<sp/>start<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ros::Duration<sp/>duration(2,<sp/>0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>ros::Rate<sp/>loop_rate(10);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>=<sp/>distance<sp/>/<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>maxSpeed<sp/>=<sp/>desiredPos<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/>start)<sp/>&lt;<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.linear.x<sp/>=<sp/>maxSpeed;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>free<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_bot_1ab20d03ffaf12e27a1ee84714a3e83950" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1ab20d03ffaf12e27a1ee84714a3e83950" kindref="member">Bot::checkFreeDirection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Checking<sp/>free<sp/>direction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>values<sp/>from<sp/>the<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>safeDistance<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a1b7aad1c82fa6df205b166b311f45447" kindref="member">getSafeDistance</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">turnRight</ref>(1.2);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>60<sp/>and<sp/>get<sp/>right<sp/>value<sp/>which<sp/>will<sp/>be<sp/>180deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>for<sp/>original<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Right<sp/>reading:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>extremeRightVal<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.2);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.2);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>60<sp/>and<sp/>get<sp/>left<sp/>value<sp/>which<sp/>will<sp/>be<sp/>180deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>for<sp/>original<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Left<sp/>reading:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>extremeLeftVal<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">turnRight</ref>(1.2);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Straight:<sp/>%f,<sp/>Right:<sp/>%f,<sp/>Left:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>(),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>(),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>())<sp/>||<sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Forward<sp/>Path<sp/>is<sp/>longer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1abc25556b72a44e45056d161eaa48e1c6" kindref="member">moveForward</ref>(1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>maxSpeed<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(extremeRightVal))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Right<sp/>Path<sp/>is<sp/>longer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">turnRight</ref>(1.57);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(extremeLeftVal))<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Left<sp/>Path<sp/>is<sp/>longer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.57);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()<sp/>&lt;<sp/>safeDistance</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>extremeRightVal<sp/>&gt;<sp/>extremeLeftVal</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>extremeRightVal<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Right<sp/>Path<sp/>is<sp/>longer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a07fd8d141a617b711eee7ab3c9e99171" kindref="member">turnRight</ref>(1.57);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()<sp/>&lt;<sp/>safeDistance</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>extremeRightVal<sp/>&lt;<sp/>extremeLeftVal</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>extremeLeftVal<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Left<sp/>Path<sp/>is<sp/>longer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.57);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Turn<sp/>Around&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.57);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bot_1a6f9bf5628c1faedb8da493b381ba95ac" kindref="member">turnLeft</ref>(1.57);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pass<sp/>through<sp/>the<sp/>door<sp/>without<sp/>colliding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_bot_1a308e7e40f00a853d1397cfafcb7d2cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bot_1a308e7e40f00a853d1397cfafcb7d2cd5" kindref="member">Bot::doorDetection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>ros::Time<sp/>start<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>ros::Duration<sp/>duration(12,<sp/>0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>ros::Rate<sp/>loop_rate(10);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/>start)<sp/>&lt;<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rightDist<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>leftDist<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>forwardDist<sp/>=<sp/>sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Door<sp/>detection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Left:<sp/>%f,<sp/>Forward:<sp/>%f,<sp/>Right:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>leftDist,<sp/>rightDist,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardDist);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a0cb8d226a7df00fa404c100f959868e6" kindref="member">getForwardReading</ref>()))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>forwardDist<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a784ee9b741908df505a51d0807dbbe9b" kindref="member">getRightReading</ref>()))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rightDist<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnanf(sensor-&gt;<ref refid="class_sensor_1a68826b1eb0dcda3a0508f213a42db25b" kindref="member">getLeftReading</ref>()))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftDist<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.linear.x<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>fabs(fabs(rightDist)<sp/>-<sp/>fabs(leftDist))<sp/>*<sp/>1.0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Error:<sp/>%f,<sp/>gain:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>error,<sp/>gain);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rightDist<sp/>&gt;<sp/>leftDist)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>-gain<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.angular.z<sp/>=<sp/>gain<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pubVel.publish(msg);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="bot.cpp"/>
  </compounddef>
</doxygen>
